#!/bin/sh
#
# A fuzzy file explorer
#
# Dpendencies:
#              sed, awk, fzf, faint-launch, faint-config, faint-fetch-config
#              faint-list, faint-bookmark & faint-operate
#
# Usage: faint (launch on the current directory)
#        faint -l (launch on the last visited directory)
#        faint -d 3 (explore directories with specified depth)
#        faint <PATH> (explore certain directories)
#        faint -n (explore without filtering)
#        faint -d 3 -n (flag overloading is possible)

. faint-config

DATA_PATH=$HOME/.local/share/faint

export DEPTH_PATH=/tmp/FAINT_DEPTH
export LAST_PATH=/tmp/FAINT_LAST_$$
export FINAL_PATH=$DATA_PATH/FAINT_FINAL
export FILTERS_PATH=$DATA_PATH/FAINT_FILTERS

FZF_DEFAULT_OPTS="\
   $FZF_DEFAULT_OPTS
   --reverse --border --no-info --margin 15%,30% --no-color --header ''
   -m --cycle
   --bind \"$KEY_LAUNCH:reload(faint-list -l {})+clear-query\"
   --bind \"$KEY_OPERATE:clear-query+execute(faint-operate {+})+reload(faint-list -r)\"
   --bind \"$KEY_BOOKMARK:clear-query+execute(faint-bookmarks {})+reload(faint-list -r)\"
   --bind \"$KEY_BACK:reload(faint-list -b)+clear-query\"
   --bind \"$KEY_QUIT:cancel\"
   --bind \"$KEY_SHELL:execute(kill -35 $$)+abort\"
   --bind \"$KEY_EDIT:clear-query+execute(faint-launch -e {})\"
   --bind \"$KEY_MARK_ALL:toggle-all\"
   --bind \"$KEY_MARK_DOWN:toggle-down\"
   --bind \"$KEY_MARK_UP:toggle-up\"
   --bind \"$KEY_UP:up\"
   --bind \"$KEY_DOWN:down\"
   --bind \"$KEY_REFRESH:reload(faint-list -r)\"
   "
export FZF_DEFAULT_OPTS

FILTERING=1

set_filters() {
   if [ "$FILTERING" = 0 ]; then
      echo zzz > "$FILTERS_PATH"
   else
      faint-fetch-config "$FILTERS" -k |
         awk '{printf "%s\\|",$0;}' |
         sed -e 's/|\./|\\./g' -e 's/\\|$//g' \
            > "$FILTERS_PATH"
   fi
}

change_root() {
   read -r LAST_DIR < "$LAST_PATH"
   cd "$LAST_DIR" || exit 1
   $SHELL
}

init() {
   echo "$PWD" > "$LAST_PATH"
   echo "${DEPTH:-1}" > $DEPTH_PATH
   [ -d "$DATA_PATH" ] || mkdir -p "$DATA_PATH"
   set_filters
}

process_args() {
   while :; do
      case $1 in
         -d) shift && DEPTH=$1 ;;
         -l) read -r DEST < $FINAL_PATH ;;
         -n) FILTERING=0 ;;
         *) break ;;
      esac
      shift
   done
   [ "$1" ] && DEST=$1
}

main() {
   process_args "$@"
   init
   trap 'change_root' RTMIN+1
   faint-list -e "${DEST:-$PWD}" | fzf
   mv "$LAST_PATH" "$FINAL_PATH"
}
main "$@"
