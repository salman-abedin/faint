#!/bin/sh
#
# Config file for faint
#
# Dependencies: file

#===============================================================================
#              Bindings ( ⁉ has to be a single character!)
#===============================================================================
KEY_LAUNCH=";"
KEY_BACK=","
KEY_OPERATE="space"
KEY_QUIT="esc"
KEY_SHELL="enter"

#===============================================================================
#                             Filters
#===============================================================================

FILTERS="\
node_modules;
package-lock.json;
yarn.lock;
.git;
"

#===============================================================================
#                             Operations
#===============================================================================

#---------------------------------------
#              Functions
#---------------------------------------
# Variable Conventions
#     FILE_ARGS      = Files selected for operation ( ⁉ Has to be unquoted )
#     FILE_LIST      = Files tracked for consecutive operations
#     FILE_LIST_PATH = PATH for tracking files

delete() { rm -fr $FILE_ARGS; }
trash() { rsync -a $FILE_ARGS "$TRASH" && delete; }
yank() { echo $FILE_ARGS | xsel -b && echo $FILE_ARGS > "$FILE_LIST_PATH"; }
paste() { rsync -a $FILE_LIST "$LAST_DIR"; }
duplicate() { rsync -a $FILE_ARGS $FILE_ARGS~; }
move() { mv $FILE_LIST "$LAST_DIR"; }
link_soft() { cp -frus $FILE_LIST "$LAST_DIR"; }
link_hard() { cp -frul $FILE_LIST "$LAST_DIR"; }

#---------------------------------------
# <OPERATION_NAME>:<OPERATION_FUNCTION>
#---------------------------------------
OPS="\
❌ Delete:delete;
⚔ Trash:trash;
© Yank:yank;
🖌 Paste:paste;
🚚 Move:move;
‼ Duplicate:duplicate;
🗞 Soft Link:link_soft;
🌴 Hard Link:link_hard;
"

#===============================================================================
#                             Icons
#===============================================================================

format() {
   while read -r file; do
      [ "$file" = . ] && continue
      if [ -d "$file" ]; then
         #---------------------------------------
         #              Folder Icon
         #---------------------------------------
         PREFIX="📁"
      else
         EXT=${file##*.}
         #---------------------------------------
         # File Icons according to extensions
         #---------------------------------------
         case $EXT in
            iso | img) PREFIX="📀" ;;
            png | ico) PREFIX="🖼" ;;
            jpg | jpeg) PREFIX="📸" ;;
            part) PREFIX="💔" ;;
            json) PREFIX="📒" ;;
            md) PREFIX="📘" ;;
            tex) PREFIX="📜" ;;
            css | sass | scss) PREFIX="🎨" ;;
            html | pug) PREFIX="🌎" ;;
            pdf | epub) PREFIX="📚" ;;
            mp4 | mkv) PREFIX="🎥" ;;
            *) PREFIX="📃" ;;
         esac
      fi
      echo "$PREFIX ${file#./}"
   done
}

#===============================================================================
#                             Launching
#===============================================================================

faint_launch() {
   case $(file --mime-type "$1" -bL) in
      # Check for the mimetype of your file (This is POSIX regex)
      video* | audio* | *gif)
         # Launch using your preferred command
         mpv "$1"
         ;;
      # So on and so forth...
      text* | *x-empty | *json | *octet-stream)
         tmux split-window -h "$EDITOR $1" \; \
            swap-pane -d -t :.1 \; \
            select-layout main-vertical
         ;;
      *)
         exit 1
         ;;
   esac
}
