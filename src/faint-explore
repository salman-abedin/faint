#!/bin/sh
#
# Helper script for faint; lists file and formats the view
#
# Dependencie: find, sort, faint-launch, faint-config & faint-fetch-config

. faint-config

format() {
   while read -r file; do
      [ "$file" = . ] && continue
      if [ -d "$file" ]; then
         PREFIX=$(faint-fetch-config "$ICONS" -v dir)
      elif [ -L "$file" ]; then
         PREFIX=$(faint-fetch-config "$ICONS" -v link)
      else
         ICON=$(faint-fetch-config "$ICONS" -v "${file##*.}")
         if [ -n "$ICON" ]; then
            PREFIX=$ICON
         else
            PREFIX=$(faint-fetch-config "$ICONS" -v file)
         fi
      fi
      echo "$PREFIX ${file#./}"
   done
}

list() {
   find . -maxdepth "$DEPTH" -name "$NAMES" \
      ! -regex ".*\($FILTERS\).*" |
      sort
}

init() {
   echo "$PWD" > "$LAST_PATH"
   read -r DEPTH < "$DEPTH_PATH"
   if [ "$USE_FILTERS" = 1 ]; then
      FILTERS=$(
         faint-fetch-config "$FILTERS" -k |
            awk '{printf "%s\\|",$0;}' |
            sed -e 's/|\./|\\./g' -e 's/\\|$//g'
      )
   else
      FILTERS=" "
   fi
   if [ "$SHOW_HIDDEN" = 1 ]; then
      NAMES="*"
   else
      NAMES="[!.]*"
   fi
}

process_args() {
   read -r LAST_DIR < "$LAST_PATH"
   case $1 in
      -b)
         DIR="${LAST_DIR%/*}"
         if [ -n "$DIR" ]; then
            cd "$DIR" || exit 1
         else
            cd / || exit 1
         fi
         ;;
      -r) cd "$LAST_DIR" || exit 1 ;;
      -t) ns yo ;;
      -c)
         shift
         NEW_DIR=${1#* }
         if [ "$LAST_DIR" = / ]; then
            DEST=$LAST_DIR$NEW_DIR
         else
            DEST=$LAST_DIR/$NEW_DIR
         fi
         if ! cd "$DEST"; then
            faint-launch "$DEST"
            cd "$LAST_DIR" || exit 1
         fi
         ;;
      *) cd "$1" || exit 1 ;;
   esac
}

main() {
   process_args "$@"
   init
   list | format
}
main "$@"
